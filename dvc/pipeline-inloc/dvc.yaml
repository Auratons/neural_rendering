stages:
  # Generate _depth, _color, _reference grouped by buildings.
  render_inloc:
    foreach:
      - 1
      - base
      - pyrender
    do:
      cmd: >-
        bash -lc "SLURM_CPUS_ON_NODE=16 cpulimit -il 1600 bash ../scripts/build_dataset_inloc.sh ${item} ../../datasets/processed/inloc/inloc_rendered_${item} | tee logs/inloc_data_build_${item}.log"
      deps:
      - ../scripts/build_dataset_inloc.sh
      - ../../inloc/render_inloc_db.py
      params:
      - render_inloc_${item}.n_max_per_scan
      - render_inloc_${item}.point_size
      - render_inloc_${item}.bg_color
      - render_inloc_${item}.max_depth
      - render_inloc_${item}.width
      outs:
      - ../../datasets/processed/inloc/inloc_rendered_${item}:
          cache: false
          persist: true

# sbatch ../scripts/inloc_db_transfomations_to_txt.sh
# sbatch ../scripts/compute_radii_for_ply.sh
# sbatch ../scripts/cpp_renderer.sh

  # Generate train and val folders from buildings splits.
  split_inloc:
    foreach:
      - 1
      - splatting
    do:
      cmd: >-
        cpulimit -il 1600 python ../../inloc/export_to_neural_rerendering.py
        --input_path ../../datasets/processed/inloc/inloc_rendered_${item}
        --output_path ../../datasets/post_processed/inloc/inloc_rendered_${item} | tee logs/inloc_data_split_${item}.log
      deps:
      - ../../inloc/export_to_neural_rerendering.py
      outs:
      - ../../datasets/post_processed/inloc/inloc_rendered_${item}:
          cache: false
          persist: true

  # Generate train and val tfrecords.
  dataset_utils_inloc:
    foreach:
      - 1
      - splatting
    do:
      cmd: bash -lc "sbatch --wait ../scripts/run_dataset_utils.sh ${item}"
      deps:
      - ../../dataset_utils.py
      - ../scripts/run_dataset_utils.sh
      params:
      - dataset_utils_${item}.dataset_name
      - dataset_utils_${item}.dataset_parent_dir
      - dataset_utils_${item}.output_dir
      outs:
      - ../../datasets/final/inloc/inloc_rendered_${item}:
          cache: false
          persist: true

  # Generate _depth, _color, _reference for for every candidate pose for each query image.
  # Creates subfolder per query image with those files per candidate pose.
  render_query:
    foreach: [1, 2, 3]
    do:
      cmd: >-
        bash -lc "sbatch --wait --exclude=node-12 ../scripts/build_query_inloc.sh ${item}"
      deps:
      - ../scripts/build_query_inloc.sh
      - ../../inloc/render_inloc_query.py
      params:
      - render_inloc_query_${item}.output_path
      - render_inloc_query_${item}.mat_path
      - render_inloc_query_${item}.max_img_size
      - render_inloc_query_${item}.squarify
      outs:
      - ../../datasets/post_processed/inloc/query_rendered_${item}:
          cache: false
          persist: true

  # Generate tfrecords for candidate pose images per query image.
  # This is not useful as we have infer_dir run mode of NRIW, see
  # infer_nriw_on_subfolders_query below.
  dataset_utils_query:
    foreach:
      - 3
    do:
      cmd: >-
        bash -lc "sbatch --wait ../scripts/run_dataset_utils_on_subfolders.sh ${item}"
      deps:
      - ../../dataset_utils.py
      - ../scripts/run_dataset_utils_on_subfolders.sh
      params:
      - dataset_utils_subfolders_${item}.input_dir
      - dataset_utils_subfolders_${item}.output_dir
      outs:
      - ../../datasets/final/inloc/query_rendered_${item}:
          cache: false
          persist: true

  # Generate renderings fo prepared subfolder from render_query.
  infer_nriw_on_subfolders_query:
    foreach: [1, 2]
    do:
      cmd: >-
        bash -lc "sbatch --wait ../scripts/infer_nriw_on_subfolders.sh ${item}"
      deps:
      - ../scripts/infer_nriw_on_subfolders.sh
      params:
      - infer_nriw_on_subfolders_${item}.input_dir
      - infer_nriw_on_subfolders_${item}.output_dir
      - infer_nriw_on_subfolders_${item}.trained_model_dir
